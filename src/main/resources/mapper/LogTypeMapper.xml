<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="main.java.dao.LogTypeMapper" >
  <resultMap id="BaseResultMap" type="main.java.model.LogType" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="log_date" property="logDate" jdbcType="TIMESTAMP" />
    <result column="log_type" property="logType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="main.java.model.LogType" extends="BaseResultMap" >
    <result column="log_what" property="logWhat" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, log_date, log_type
  </sql>
  <sql id="Blob_Column_List" >
    log_what
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_info
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log_info
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="main.java.model.LogType" >
    insert into log_info (log_id, log_date, log_type, 
      log_what)
    values (#{logId,jdbcType=INTEGER}, #{logDate,jdbcType=TIMESTAMP}, #{logType,jdbcType=INTEGER}, 
      #{logWhat,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="main.java.model.LogType" >
    insert into log_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="logDate != null" >
        log_date,
      </if>
      <if test="logType != null" >
        log_type,
      </if>
      <if test="logWhat != null" >
        log_what,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logDate != null" >
        #{logDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logType != null" >
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="logWhat != null" >
        #{logWhat,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="main.java.model.LogType" >
    update log_info
    <set >
      <if test="logDate != null" >
        log_date = #{logDate,jdbcType=TIMESTAMP},
      </if>
      <if test="logType != null" >
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="logWhat != null" >
        log_what = #{logWhat,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="main.java.model.LogType" >
    update log_info
    set log_date = #{logDate,jdbcType=TIMESTAMP},
      log_type = #{logType,jdbcType=INTEGER},
      log_what = #{logWhat,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.java.model.LogType" >
    update log_info
    set log_date = #{logDate,jdbcType=TIMESTAMP},
      log_type = #{logType,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>